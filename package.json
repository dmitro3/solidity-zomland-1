{
  "name": "zomland-solidity",
  "version": "0.0.1",
  "private": false,
  "license": "MIT",
  "scripts": {
    "cleanup": "rm -rf ./dist && rm -rf .parcel-cache",
    "parcel:build": "parcel build src/index.html --public-url ./",
    "start": "cp src/frontend/contractsData/localhost/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=local parcel src/index.html --open",
    "build": "cp src/frontend/contractsData/localhost/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=local npm run parcel:build",
    "build:dev:bsc": "cp src/frontend/contractsData/bsc_testnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=development.bsc npm run parcel:build",
    "build:dev:meter": "cp src/frontend/contractsData/meter_testnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=development.meter npm run parcel:build",
    "build:dev:mumbai": "cp src/frontend/contractsData/mumbai_testnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=development.mumbai npm run parcel:build",
    "build:prod:bsc": "cp src/frontend/contractsData/bsc_mainnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=production.bsc npm run parcel:build",
    "build:prod:meter": "cp src/frontend/contractsData/meter_mainnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=production.meter npm run parcel:build",
    "build:prod:polygon": "cp src/frontend/contractsData/polygon_mainnet/* src/frontend/contractsData/ && npm run cleanup && NODE_ENV=production.polygon npm run parcel:build",
    "deploy": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network localhost",
    "deploy:dev:bsc": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network bsc_testnet",
    "deploy:dev:meter": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network meter_testnet",
    "deploy:dev:mumbai": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network mumbai_testnet",
    "deploy:prod:bsc": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network bsc_mainnet",
    "deploy:prod:meter": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network meter_mainnet",
    "deploy:prod:polygon": "env $(cat .env) npx hardhat run src/backend/scripts/deploy.js --network polygon_mainnet",
    "update:local": "env $(cat .env) npx hardhat run src/backend/scripts/upgrade.js --network localhost",
    "update:dev:bsc": "env $(cat .env) npx hardhat run src/backend/scripts/upgrade.bsc.js --network bsc_testnet",
    "update:dev:mumbai": "env $(cat .env) npx hardhat run src/backend/scripts/upgrade.mumbai.js --network mumbai_testnet",
    "update:dev:local": "env $(cat .env) npx hardhat run src/backend/scripts/upgrade.local.js --network localhost",
    "console": "npx hardhat console --network localhost",
    "local": "npx hardhat node",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "@headlessui/react": "^1.6.6",
    "@heroicons/react": "^1.0.6",
    "@nomiclabs/hardhat-ethers": "^2.1.0",
    "@nomiclabs/hardhat-etherscan": "^3.1.0",
    "@nomiclabs/hardhat-waffle": "^2.0.3",
    "@openzeppelin/contracts": "4.7.3",
    "@openzeppelin/contracts-upgradeable": "^4.7.3",
    "@openzeppelin/hardhat-upgrades": "^1.19.1",
    "@reduxjs/toolkit": "^1.8.3",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^14.3.0",
    "chai": "^4.3.6",
    "css-loader": "^6.7.1",
    "ethereum-waffle": "^3.4.4",
    "ethers": "^5.6.9",
    "file-loader": "^6.2.0",
    "firebase": "^9.9.1",
    "hardhat": "^2.10.1",
    "html-loader": "^4.1.0",
    "parcel": "2.6.2",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-circular-progressbar": "^2.0.5",
    "react-dom": "^18.2.0",
    "react-is": "^18.2.0",
    "react-redux": "^8.0.2",
    "react-refresh": "^0.11.0",
    "react-router-dom": "6.3.0",
    "react-scripts": "5.0.1",
    "react-scroll": "^1.8.7",
    "style-loader": "^3.3.1",
    "styled-components": "^5.3.5"
  },
  "eslintConfig": {
    "extends": [
      "react-app"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all",
      "not ios_saf < 13"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {}
}
