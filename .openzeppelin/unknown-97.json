{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6e030A88f7694234aBc74b17501D4BC0CcD4F90A",
      "txHash": "0x6ec2ac339236d9541a8348b11c32ea2649a0b560d9832157bf63cfdba0ff5ee4",
      "kind": "uups"
    },
    {
      "address": "0x1cb2B26F3AcEe1EF80a33CCE25b51926E8D52224",
      "txHash": "0xee94d0803f640194c7fd29f94f84086a3db3ebc3e4bf35c9022aaf093854072a",
      "kind": "uups"
    },
    {
      "address": "0xf7A9D544464aa61B6443C80048dAB816da626C4b",
      "txHash": "0xebf20fad79852a4c9752bf809889a12f695dea1f8f26f56fa6ba8b29fb025555",
      "kind": "uups"
    },
    {
      "address": "0x5D31e0Adf3466ab47dE1B62BEd1A16E393438914",
      "txHash": "0x8e5164f5438956fe70a0a54a068faff41feac181f791fb8a92bf684b8fe833d7",
      "kind": "uups"
    },
    {
      "address": "0xF68cCCC34afE0C56526316fdAd5e047E8E6a6D12",
      "txHash": "0x80034822202ce707cd602ba901c6130e8baf4c8229a4d5c802de7bb08e009189",
      "kind": "uups"
    },
    {
      "address": "0x9e85B2EE6a354Cb82021D48519f83697118B5281",
      "txHash": "0x57135981d93f68fff8e1fb11e4437997a7b2130a2d4851b8f2adb7a0a5d87b07",
      "kind": "uups"
    },
    {
      "address": "0x48A2737265E497c23292800AA591CBF59D8632e8",
      "txHash": "0x5eb1639f1cc8f12cdeeb1416235875eb1786a8ac89fd34e164d994b25b8085ca",
      "kind": "uups"
    },
    {
      "address": "0x69e847c6324Ce287db926f3a9b73aC9532579221",
      "txHash": "0x3ef09b28924b95d9ccbaa9dd212e6b8cb80b47c9334effd59678c54f896ba715",
      "kind": "uups"
    },
    {
      "address": "0x81d9D2428633d018A6F259EDD4FDA373C93548D8",
      "txHash": "0x8d9a09f1cbf991dba85b8c7d0e037699174d4a397c34146bfa6b7c54a76def59",
      "kind": "uups"
    },
    {
      "address": "0xEDE2eDf1A0eB671C4F88f5715A17D9320a3167DA",
      "txHash": "0x3e26c9c84232d7000d3808fdeb695b81d74cc9b6372109400ed2442e2779cb95",
      "kind": "uups"
    },
    {
      "address": "0x4E23e91119F205F36e71E9031521446685fb5A88",
      "txHash": "0x235b1b503f1c42d3495f6b232b8a8236e734a91967d292c7d7a74ca11f1ebabb",
      "kind": "uups"
    },
    {
      "address": "0xDd6D155FAE7A6b4B4c53284b1413f008029Cb2b3",
      "txHash": "0x1b31ef6b9a5c63cee0a6976689319a0bcc69e771d781e86308feb476a5840cda",
      "kind": "uups"
    },
    {
      "address": "0xf11Fbe6f69125ACb95Acac575d7d137B5d884c24",
      "txHash": "0x62b081014800ab3e5721d3b3b55c492c5d33e36e3bc42a54e5f854e6d8b5f9b4",
      "kind": "uups"
    },
    {
      "address": "0x58D3de4646AFf499ACb67Db33fB57299184f301f",
      "txHash": "0x66c7fc8bffee4305ad7dcf4e61f7bbd6215353312f692cad1a208892ad06904f",
      "kind": "uups"
    },
    {
      "address": "0xC38b4b4bEB1eD22A3A66b4Caad62A8b508075Ad4",
      "txHash": "0x47b24dd9ff272a06e712388cdb0bbbae8eaacd286acb4904d96ee8e57c07121d",
      "kind": "uups"
    },
    {
      "address": "0xd2f2C31C7D2A4DE67F9049d19FF57485861b1312",
      "txHash": "0x3beb6710828be686fa10fdf24780ed9681c453b8fb652ac926056cd2f21c837d",
      "kind": "uups"
    },
    {
      "address": "0x5810cAeAD28b547eab088b3246650BB43fCEedFF",
      "txHash": "0xd35ddbf8b18a100c05e9b8fb6d6c4e5c0ab936e4e579817bba5443bc49c7493b",
      "kind": "uups"
    },
    {
      "address": "0x7cA1fDD2D3a2bCE2F5D5cFcD5Cb74D67A4e3d5ED",
      "txHash": "0x206ca88ebb252e3059836e7db43168c8dfa2b1902e12377f8d9f2c310e81d295",
      "kind": "uups"
    },
    {
      "address": "0xF56226032D3EEc7D1D0D4a38304951b9732cC5CB",
      "txHash": "0x47b9fcad149166efb6bb61faf3c227cd1b85ca3361df26371ec5f477bf272f7c",
      "kind": "uups"
    },
    {
      "address": "0xA8ad686F89d4b41f235AE61Ba95E653aac9A23F5",
      "txHash": "0xe93f326fd4f6d31e2ac2f6d83fb1123af2669c2bb7fc28fa0a2a9e3d02fef5d0",
      "kind": "uups"
    },
    {
      "address": "0x753b85bD08B1FB2E0CB606D8Bf2e23afBa27f743",
      "txHash": "0x91c4112c814186405d7fa2c7cd281d0beab87f0f019b96bd3ef35b0895c2e722",
      "kind": "uups"
    },
    {
      "address": "0x539e63fc3D9F3EAb5Eba378c79567b7d50a30E85",
      "txHash": "0x430ecf3a94679ca9de2c262c0b876344e3f88ffc0cf6e1ad6f623fb7929b008e",
      "kind": "uups"
    },
    {
      "address": "0x965DEB6632933Da1b014AfcDB93A8ca26Eba56aE",
      "txHash": "0xfeab237d7280ceb856acdd9b3b7b6e0fea23f98b141d5bd8893916204b2f3004",
      "kind": "uups"
    },
    {
      "address": "0xf99fDF2235908b179fa8CC24D02E23a4E278d769",
      "txHash": "0x4783f0cf57ef0535487de540e53206f3c290fdf1d5f5189b528641f16f124640",
      "kind": "uups"
    },
    {
      "address": "0xCFF245fad71954fB62fa8c82FDA2CA9527E99240",
      "txHash": "0xd75a080268e2b09b97b1847586a28ce6bb1a5b461ea8a1aa4b238104265f9fee",
      "kind": "uups"
    },
    {
      "address": "0xb4a0b98eF353Fe109d664c8023c3292740b11686",
      "txHash": "0xb19e72480a0cc89fbadf286fb645718607592afbe5ff47716d51caacba5dc5e5",
      "kind": "uups"
    },
    {
      "address": "0x4e1912CC0192FeCd614ba883363b0C77de853C60",
      "txHash": "0x70c2a7da4ccf75a111be916f6db560cf81f667ecfa2651593bcf307196141fda",
      "kind": "uups"
    },
    {
      "address": "0x4d0DCD5E5FE3D7Ac7bC7aA93c2573BBe87dDD9Dc",
      "txHash": "0x33f8e1ad302766617455be2dea602cbf697ddf121eccb500f48692e0ee27962d",
      "kind": "uups"
    },
    {
      "address": "0x8d39c28571f6C02Ed1D84B4Bd9519c9988D86B0A",
      "txHash": "0xb984586ee9fdbe55997071694a0a7c9b0d753b29eac7f33fb4ff0bafcd79df89",
      "kind": "uups"
    },
    {
      "address": "0xC7DAB6f8D4246B3592eCE7a98B16D09341BeC979",
      "txHash": "0x4b138b7860a1df8c3b20e9fd0e66534df2165f4b63b291cf37c9f93b4774fb03",
      "kind": "uups"
    },
    {
      "address": "0x87b9B6CBA3926eF35d0ea0Cc29DD3556Ba31FbE8",
      "txHash": "0xaec38a6fabcf759fd6586088f1d801e1501b6bf5e7ec260f5b4fd3caa6ca54c0",
      "kind": "uups"
    },
    {
      "address": "0x16d9Fe9e19EcE57Aea7A46275EE18a5A2553585d",
      "txHash": "0xfb739269ddeb6795546aa20c4b3e1db80e66d77324d225f5c4608fbbfd0fa5ed",
      "kind": "uups"
    },
    {
      "address": "0x27ab1244dCb52c27FaA8E121E2452cD8957c5498",
      "txHash": "0x2415637c9816e6f831d719c66e909684f7ce212c2e0d0ed605986e7252a09fd6",
      "kind": "uups"
    }
  ],
  "impls": {
    "f173e6479ed02a573f349fc6e351dc5f981d612b81b7963bed6a7b4342532062": {
      "address": "0xc8C05C2869b910A8eA03D647187F53Fe06418c4a",
      "txHash": "0xfd53da0a84e04d0a096deb6548a9cf9dcfa481f28395a826f40dc60941a275ff",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "contractLandNFT",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:9"
          },
          {
            "label": "contractZombieNFT",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:10"
          },
          {
            "label": "contractZombieNFTHelper",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:11"
          },
          {
            "label": "contractMonsterNFT",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:12"
          },
          {
            "label": "contractTokenFT",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:13"
          },
          {
            "label": "contractCollection",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:14"
          },
          {
            "label": "contractMarket",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "358c12f6e68a8492b7aea710e2cf1c8394641d25cd77604dd35b1fec6aaf055b": {
      "address": "0xa27375f5f64123A354115ecF4d233561E8123500",
      "txHash": "0x2a377e7f68829080f696112b7c8223d8a0ec2c10db0c7e613c0c05f0e390cd89",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f02b6837a50b88dfdff2819baf88132caa31be83e0f9d2d5cec9698bfba5b04": {
      "address": "0xA2701b50ec6D161Fd6DE33efd71bcE910a600bDa",
      "txHash": "0x3a50d4a6ba194016defb47c8f5629a917cc6f5a1228a1a550ceaa42253cfd556",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:24"
          },
          {
            "label": "killedZombies",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:25"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Zombie)16755_storage)",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:26"
          },
          {
            "label": "userCollectionZombie",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:27"
          },
          {
            "label": "userRarityZombie",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(ModifierItems)12171)dyn_storage": {
            "label": "enum Utils.ModifierItems[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "Uncommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ModifierItems)12171": {
            "label": "enum Utils.ModifierItems",
            "members": [
              "WeaponV1",
              "WeaponV2",
              "ArmorV1",
              "ArmorV2"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Zombie)16755_storage)": {
            "label": "mapping(uint256 => struct ZombieNFTContract.Zombie)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Zombie)16755_storage": {
            "label": "struct ZombieNFTContract.Zombie",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint8",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint8",
                "offset": 1,
                "slot": "7"
              },
              {
                "label": "brain",
                "type": "t_uint8",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "speed",
                "type": "t_uint8",
                "offset": 3,
                "slot": "7"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "modifier_items",
                "type": "t_array(t_enum(ModifierItems)12171)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "next_battle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2701933e038236cdea8709ad8c1c70f90fda8d6026d87613f1ea2e9105f0fd3d": {
      "address": "0x07a79D4B17b523A0ffBd8337e564C2892a856122",
      "txHash": "0xf30c3ea4c8a2f3196be44248f5b8a501fc67a769d31a17a4bd4f921aaf68dab8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d39cc61c29589915afef72cffc6ca5ca58c7aae628f40b16df13fef1c5385c5": {
      "address": "0xcc54357F7C19F7694Ea2F5e1eC65bD1A1b416A82",
      "txHash": "0x6a5ad30fa612462cf96d10870a5a553b0c4221600cedb34c0481f0a0d4a43a5b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:24"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_struct(Monster)15247_storage)",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:25"
          },
          {
            "label": "userRarityMonster",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:26"
          },
          {
            "label": "killedMonsters",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "Uncommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)15247_storage)": {
            "label": "mapping(uint256 => struct MonsterNFTContract.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Monster)15247_storage": {
            "label": "struct MonsterNFTContract.Monster",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "brain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "nextLandDiscovery",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "nextBattle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d4b9dac76c117d75802907c22ef330a279d2e93f6d403bea338804cf1f7f3cb7": {
      "address": "0x1d3cF75DEE4422192bfc2fF1e46AF702F0d31c32",
      "txHash": "0xa5bba1b8e09adac44b5c368b14f48f05a7d4f635dabed86dd097036f606347bc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "collectionIpfsHash",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:13"
          },
          {
            "label": "collectionCount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:14"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)12546_storage)",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(Collection)12546_storage)": {
            "label": "mapping(uint256 => struct CollectionContract.Collection)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)12546_storage": {
            "label": "struct CollectionContract.Collection",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cfd9268a0f6d903dc7405df84fe82e56b689badcef07e887e4c612c5ce94e65": {
      "address": "0x712Cfd9a21ebf92cA50f043029eBbf3D007Eff01",
      "txHash": "0x88e562225aedd40879a51630477118e33b95c77a2e6facc3a1172bf7076f98ce",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "rewardRate",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:14"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:15"
          },
          {
            "label": "rewardPerTokenStored",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:16"
          },
          {
            "label": "stakingTotalSupply",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:17"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:18"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4b9efed99575c42bd6da3f377faf3f287db222caa3df57566c6876571c1c6f97": {
      "address": "0x02Ed2eed788d7cE2749c840AcB8F2028ad20110b",
      "txHash": "0x75e37fb73998be1f9fd2b8df08776281e0d807ee7b2e127596ee9e956db53033",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:17"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:18"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:19"
          },
          {
            "label": "historySaleIndex",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:20"
          },
          {
            "label": "marketHistory",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_struct(HistoryItem)14021_storage)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:21"
          },
          {
            "label": "currentSaleIndex",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(HistoryItem)14021_storage)": {
            "label": "mapping(uint256 => struct MarketContract.HistoryItem)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(HistoryItem)14021_storage": {
            "label": "struct MarketContract.HistoryItem",
            "members": [
              {
                "label": "fromUser",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toUser",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8bb91c0c71e38f7aa07977e429acd1f18a956a211460d34a4150dfef20a3a7a7": {
      "address": "0xd24e96ADF22d5Bc6E81694bbB276020426546e86",
      "txHash": "0x1b5701b61b354346401a7c1e4c36e1b87ee55bc69246ee3e8ce6d2937f824da7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "contractLandNFT",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:9"
          },
          {
            "label": "contractZombieNFT",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:10"
          },
          {
            "label": "contractZombieNFTHelper",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:11"
          },
          {
            "label": "contractMonsterNFT",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:12"
          },
          {
            "label": "contractTokenFT",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:13"
          },
          {
            "label": "contractCollection",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:14"
          },
          {
            "label": "contractMarket",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:15"
          },
          {
            "label": "contractMonsterNFTHelper",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "284fefe9b0e5898179b0a9111585784974cb3e375e87003b2e86a339a4fda396": {
      "address": "0x8ffC7D22bdF0932b99232a0533a52DaC783f450B",
      "txHash": "0x4e6cb7af89979cc474b0c89d163d6ddcf274df6945602d181389922c636e2ade",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "71f71eda9a8ee411d6ba5b83ce6cdadc24734522f0b763dbbee7412196e9cd2e": {
      "address": "0x8acd0F2f769Ae82F997AFDF59954BA633D0Ab67c",
      "txHash": "0x010c8b9a7d41fc5dc5d4179d707949613ddbb0a11e8b2842f638ba211849ff51",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "contractLandNFT",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:9"
          },
          {
            "label": "contractZombieNFT",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:10"
          },
          {
            "label": "contractZombieNFTHelper",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:11"
          },
          {
            "label": "contractMonsterNFT",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:12"
          },
          {
            "label": "contractMonsterNFTHelper",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:13"
          },
          {
            "label": "contractTokenFT",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:14"
          },
          {
            "label": "contractCollection",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:15"
          },
          {
            "label": "contractMarket",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "MainContract",
            "src": "src/backend/contracts/Main.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8a95aa2b9975230e89cc903db6895081d9fdc8583572fadfe4fe9bf279b5055": {
      "address": "0x33A118c1b074eDd6c1c23C63f9f3F460a3a4a9A3",
      "txHash": "0x73faab93432531bd507bc577bf96a1f51d1e516e6451b9d48ec1949e177fde6e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:24"
          },
          {
            "label": "killedZombies",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:25"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Zombie)17118_storage)",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:26"
          },
          {
            "label": "userCollectionZombie",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:27"
          },
          {
            "label": "userRarityZombie",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(ModifierItems)12171)dyn_storage": {
            "label": "enum Utils.ModifierItems[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "UnCommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ModifierItems)12171": {
            "label": "enum Utils.ModifierItems",
            "members": [
              "WeaponV1",
              "WeaponV2",
              "ArmorV1",
              "ArmorV2"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Zombie)17118_storage)": {
            "label": "mapping(uint256 => struct ZombieNFTContract.Zombie)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Zombie)17118_storage": {
            "label": "struct ZombieNFTContract.Zombie",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint8",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint8",
                "offset": 1,
                "slot": "7"
              },
              {
                "label": "brain",
                "type": "t_uint8",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "speed",
                "type": "t_uint8",
                "offset": 3,
                "slot": "7"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "modifier_items",
                "type": "t_array(t_enum(ModifierItems)12171)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "next_battle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a28176e819fff2b6f6816619b10a30de1c3fce173de0cf454d108603d3330afc": {
      "address": "0xF94d76A5c2378A83781f33F57B19458A43421369",
      "txHash": "0xc5f2a962209150f2b465c9ecddd01c013fd19c366ba8a5e8a387d5965f1787ba",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c653aab17dfcbcbfaeab3f49004faf1e028b58ebb342b2caa7c3dbc963335bd1": {
      "address": "0xBA1AE241d098aCcF61112B06f0786EC07Ff53a00",
      "txHash": "0xfb0d568bd5966b44093c60537b8029f4d0da06321ac8d08a39bafd4545be45f5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:24"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_struct(Monster)15280_storage)",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:25"
          },
          {
            "label": "userRarityMonster",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:26"
          },
          {
            "label": "killedMonsters",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "UnCommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)15280_storage)": {
            "label": "mapping(uint256 => struct MonsterNFTContract.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Monster)15280_storage": {
            "label": "struct MonsterNFTContract.Monster",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "brain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "nextLandDiscovery",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "nextBattle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fdfb53ea4daa2ad589c8836953d0ebeccb866fdb8c16e3c6a548c4f15b8c4c47": {
      "address": "0xbd48C2DF61F7b7f6939B85249b44c577C8217597",
      "txHash": "0x5d6306e1a5414c78540b16d70030b7900222b5bdee8877169a1acdc0e124ab7d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "07e5ed3327bf943f8162b4493d3ee5b7d81a2d84bfc4ef97f51d7bf1347ec4eb": {
      "address": "0xeA49B24bc995Edd923b96fB80f3FED9B0eF89859",
      "txHash": "0xf7bc823894d0a829449d3b1440b639f66b215ef7905640fcf7253f3737e41d47",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "collectionIpfsHash",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:13"
          },
          {
            "label": "collectionCount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:14"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)12546_storage)",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(Collection)12546_storage)": {
            "label": "mapping(uint256 => struct CollectionContract.Collection)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)12546_storage": {
            "label": "struct CollectionContract.Collection",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65ff65391ae93889d794f9ed6ea6eee252136d636e6847467454bbd63fc1359e": {
      "address": "0x679822Ad911b0da9e6B5b999aB9508c1492997aa",
      "txHash": "0x66f3e7a83a7aca4daa582b6c1d4859a35b86d4677a5c7a9fad74a93d5c2f2166",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "rewardRate",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:14"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:15"
          },
          {
            "label": "rewardPerTokenStored",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:16"
          },
          {
            "label": "stakingTotalSupply",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:17"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:18"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "63d6bbac4897a45f4d8e0cd2caf493f0302593c1e451d9e74c6e0a6f0f21ac81": {
      "address": "0x15cb935e413109a30f48f2BB91391bfEC46613F9",
      "txHash": "0xb796df1485c0adce969e50bf4419c87ee9ba1fcedbf2f67a4795d042594d62fc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:17"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:18"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:19"
          },
          {
            "label": "historySaleIndex",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:20"
          },
          {
            "label": "marketHistory",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_struct(HistoryItem)14054_storage)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:21"
          },
          {
            "label": "currentSaleIndex",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(HistoryItem)14054_storage)": {
            "label": "mapping(uint256 => struct MarketContract.HistoryItem)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(HistoryItem)14054_storage": {
            "label": "struct MarketContract.HistoryItem",
            "members": [
              {
                "label": "fromUser",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toUser",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8b9c06fe5a3a1f6f715a768b10b5803d2ffd4e4bc9221434551550edce46d3c": {
      "address": "0x54182d88F7b8A8695667015c3500aa86e8ab57BE",
      "txHash": "0xc920ccd178ddcd4136cb3599be242c1c3a3f3d1942452cb4f3140dd9691d1887",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d7298bb428b65c7ee0e6361c4c494fc0b1bccd4b7ac557f616b9d40d3308a43": {
      "address": "0xE17662B47904913ECd2298cdd2C0a156D894eF9d",
      "txHash": "0xf133d6551008bf8e660bcf657ca45b9602cb0738c388393b67d733f0f6f29083",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "28b5508ede36306bd23266ffd4b5c7837cb0e02c4e138acd6b755f087c7b2594": {
      "address": "0xf1B6766e11b3dDb9E45d8048f03Fde8445224df7",
      "txHash": "0x1929d3f511eacb43d7ea3004457a42f7dabed657d9ac288ddea9067749bb7620",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "493e54a7982bd968f3a567e6cde38c0cdd866c7f229c41dbdf91f161bf81d76d": {
      "address": "0x6f9486d534b244e6a3675738bC38623C248ebA27",
      "txHash": "0xe43f956e8c778065864ab05eadeabdc71ace65da4a9c524907e00bb6808740bc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d16c44901fb67f4d4515e30e1acd43a67075a20ca24a75a21bd895205e15c73": {
      "address": "0x64025811685729C48a6bf4Aa168F3369E4298528",
      "txHash": "0xc31977f9528edc20310fee3978d28daf49dfd7d19d3dc1e6e06444c711715bea",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:23"
          },
          {
            "label": "landTypeIndex",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_enum(LandType)12852)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:24"
          },
          {
            "label": "landTypeCount",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_enum(LandType)12852,t_uint256)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:25"
          },
          {
            "label": "landTypeData",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:26"
          },
          {
            "label": "accountsWithMicroLand",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:27"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_uint256,t_struct(Land)12872_storage)",
            "contract": "LandNFTContract",
            "src": "src/backend/contracts/LandNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LandType)12852": {
            "label": "enum LandNFTContract.LandType",
            "members": [
              "Micro",
              "Small",
              "Medium",
              "Large"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_struct(LandTypeData)12881_storage)": {
            "label": "mapping(enum LandNFTContract.LandType => struct LandNFTContract.LandTypeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LandType)12852,t_uint256)": {
            "label": "mapping(enum LandNFTContract.LandType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Land)12872_storage)": {
            "label": "mapping(uint256 => struct LandNFTContract.Land)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_enum(LandType)12852)": {
            "label": "mapping(uint8 => enum LandNFTContract.LandType)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Land)12872_storage": {
            "label": "struct LandNFTContract.Land",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "landType",
                "type": "t_enum(LandType)12852",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastZombieClaim",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "discoverEvents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "countMintedZombies",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LandTypeData)12881_storage": {
            "label": "struct LandNFTContract.LandTypeData",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limitCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "zombiesPerDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d2eab59417ffd361c643af6297dc3e3b590e04476413742dd2ae35c88c435594": {
      "address": "0x3DF2061B246B6A7CF2b1be7178b97126C9A8eAC0",
      "txHash": "0xaf34c17300588ba73e45592592c0ab8c289479cc9856813dae28f9a11a34ef74",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:24"
          },
          {
            "label": "killedZombies",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:25"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Zombie)17235_storage)",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:26"
          },
          {
            "label": "userCollectionZombie",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:27"
          },
          {
            "label": "userRarityZombie",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "ZombieNFTContract",
            "src": "src/backend/contracts/ZombieNFT.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(ModifierItems)12171)dyn_storage": {
            "label": "enum Utils.ModifierItems[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "UnCommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ModifierItems)12171": {
            "label": "enum Utils.ModifierItems",
            "members": [
              "WeaponV1",
              "WeaponV2",
              "ArmorV1",
              "ArmorV2"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Zombie)17235_storage)": {
            "label": "mapping(uint256 => struct ZombieNFTContract.Zombie)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Zombie)17235_storage": {
            "label": "struct ZombieNFTContract.Zombie",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint8",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint8",
                "offset": 1,
                "slot": "7"
              },
              {
                "label": "brain",
                "type": "t_uint8",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "speed",
                "type": "t_uint8",
                "offset": 3,
                "slot": "7"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "modifier_items",
                "type": "t_array(t_enum(ModifierItems)12171)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "next_battle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cb71b6de7e6e97b45f94e869e73628049b0b80aaad0b76fd2e226b2cd9d171b6": {
      "address": "0xf30Eaf95D3082283fcaD7106971fC9A280D1ddf0",
      "txHash": "0x70918e1c4f47f9aeb8f71c0a0f08e90b84771a6d08528e1cce56be279f86a02e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5648a2a8195b21d85503855b35183758abcd15cbf0fe61edbddafc2ce88989c5": {
      "address": "0xB40244ef3027cA1f89bde6CDA5922847e94220FA",
      "txHash": "0xf574fa619a35b17d6cb6922574c8e08dece70d0769bc1459755a218c70d30dcc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)3498_storage",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:25"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_struct(Monster)15289_storage)",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:26"
          },
          {
            "label": "userRarityMonster",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:27"
          },
          {
            "label": "killedMonsters",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:28"
          },
          {
            "label": "stakedMonsters",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_struct(StakedMonster)15296_storage)",
            "contract": "MonsterNFTContract",
            "src": "src/backend/contracts/MonsterNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(CardRarity)12166": {
            "label": "enum Utils.CardRarity",
            "members": [
              "Common",
              "UnCommon",
              "Rare",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(enum Utils.CardRarity => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakedMonster)15296_storage)": {
            "label": "mapping(address => struct MonsterNFTContract.StakedMonster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)12166,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Utils.CardRarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Monster)15289_storage)": {
            "label": "mapping(uint256 => struct MonsterNFTContract.Monster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3498_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Monster)15289_storage": {
            "label": "struct MonsterNFTContract.Monster",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cardRarity",
                "type": "t_enum(CardRarity)12166",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "killTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "salePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "media",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "brain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "ownerId",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "nextLandDiscovery",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "nextBattle",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(StakedMonster)15296_storage": {
            "label": "struct MonsterNFTContract.StakedMonster",
            "members": [
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPct",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce4e5f07c96f1a931d82be845c0829754de9dc29da3329af024d1d625f14142f": {
      "address": "0x83B27bE63056bC56FF921Df925e7f8CAbC298EF0",
      "txHash": "0x96cb1f623979deab06a4b1d5b0645f93c408a1f64754d1e8b4c6350010833618",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "collectionIpfsHash",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:13"
          },
          {
            "label": "collectionCount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:14"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)12546_storage)",
            "contract": "CollectionContract",
            "src": "src/backend/contracts/Collection.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(Collection)12546_storage)": {
            "label": "mapping(uint256 => struct CollectionContract.Collection)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)12546_storage": {
            "label": "struct CollectionContract.Collection",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1911d86f258b9861e00cb1b717535e87b9f6dbbc8dde6809321611ad16c53b1": {
      "address": "0x71AA257Cdb627C834404985aaa8a4a960310D252",
      "txHash": "0x5368297d0a01ad853a4dbd58d31b9e9a90d87ec657f38f3296a717cde4ddb1a2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "rewardRate",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:14"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:15"
          },
          {
            "label": "rewardPerTokenStored",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:16"
          },
          {
            "label": "stakingTotalSupply",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:17"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:18"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFTContract",
            "src": "src/backend/contracts/TokenFT.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fee0ed49b532c019f87b048683493052b1aedb56de650e7aa877c15390c5d038": {
      "address": "0xEd13C62F1F16659D0C3bC985026585f7e2038a57",
      "txHash": "0x9e33e05404cd93545a050e3e389671ab0e3b32e8c4825b4ccd6b17187b676ccb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          },
          {
            "label": "lands",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:17"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:18"
          },
          {
            "label": "monsters",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:19"
          },
          {
            "label": "historySaleIndex",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:20"
          },
          {
            "label": "marketHistory",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_struct(HistoryItem)14054_storage)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:21"
          },
          {
            "label": "currentSaleIndex",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "MarketContract",
            "src": "src/backend/contracts/Market.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(HistoryItem)14054_storage)": {
            "label": "mapping(uint256 => struct MarketContract.HistoryItem)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(HistoryItem)14054_storage": {
            "label": "struct MarketContract.HistoryItem",
            "members": [
              {
                "label": "fromUser",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toUser",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7795efe893870238bd47081062f2e5de59c23e95889cf38bc1211f2f3fa2b4fe": {
      "address": "0x0d1Ca02d41B89487449b725F938e4292677bd492",
      "txHash": "0x25ebc254b1d0b2f982f391feba1abe5be274c303685c3fb240525ade9208fa84",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "mainContract",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Modifiers",
            "src": "src/backend/abstract/modifiers.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
